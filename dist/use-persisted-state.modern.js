import{useRef as e,useState as t,useEffect as o,useCallback as r}from"react";import l from"@use-it/event-listener";const n={},a=(e,t,o)=>(n[e]||(n[e]={callbacks:[],value:o}),n[e].callbacks.push(t),{deregister(){const o=n[e].callbacks,r=o.indexOf(t);r>-1&&o.splice(r,1)},emit(o){n[e].value!==o&&(n[e].value=o,n[e].callbacks.forEach(e=>{t!==e&&e(o)}))}});export default(n,c=(()=>"undefined"!=typeof global&&global.localStorage?global.localStorage:"undefined"!=typeof globalThis&&globalThis.localStorage?globalThis.localStorage:"undefined"!=typeof window&&window.localStorage?window.localStorage:"undefined"!=typeof localStorage?localStorage:null)())=>{if(c){const s=(e=>({get(t,o){const r=e.getItem(t);if(null==r)return"function"==typeof o?o():o;try{return JSON.parse(r)}catch(e){return console.error(`Error parsing JSON for key "${t}":`,e),"function"==typeof o?o():o}},set(t,o){e.setItem(t,JSON.stringify(o))}}))(c);return c=>((n,c,{get:s,set:i})=>{const u=e(null),[f,g]=t(()=>s(c,n));l("storage",({key:e,newValue:t})=>{if(e===c)try{const e=JSON.parse(t);f!==e&&g(e)}catch(e){console.error(`Error parsing JSON for key "${c}":`,e),f!==t&&g(t)}}),o(()=>(u.current=a(c,g,n),()=>{u.current.deregister()}),[n,c]);const p=r(e=>{const t="function"==typeof e?e(f):e;i(c,t),g(t),u.current.emit(e)},[f,i,c]);return[f,p]})(c,n,s)}return t};
